 ▶ 조건문
   ▷ if문
      
   if(조건식){
      실행할 문장;
   }
   위의 조건식 결과와 상관없이 무조건 검사
   if(조건식){
      실행할 문장;
   }
   if(조건식){
      실행할 문장;
   }...


   if(조건식){
      실행할 문장;
   }
   위 조건식이 false일 경우만 검사, 아니면 검사하지 않음.
   else if(조건식){
      실행할 문장;
   }
   ...
   }
   else {
      실행할 문장
   }

   ▷ switch문

   switch(값){
   case 값1:
      실행할 문장;
      break;
   case 값2:
      실행할 문장;
      break;
   case 값3:
      실행할 문장;
      break;
   ...
   default:
      실행할 문장;
      break;
   }


기타 제어문
   break: 즉시 해당 중괄호 영역을 탈출한다.
      - if문 안에서 사용 시 if문을 탈출하지 않고 if문을 감싸고 있는 중괄호 영역을 탈출한다.

   continue: 즉시 다음 반복.
      - 아래에 작성된 코드를 실행하고 싶지 않을 때 사용한다.
      

삼항 연산자, if문, switch문의 비교
   삼항 연산자: 조건식이 1개 있을 경우 사용
   if문: 조건식에 비교(>, <, >=, <=) 연산자를 사용하거나, 여러 개의 조건식을 논리 연산자(&&, ||) 사용
   switch: 하나의 변수에 여러 개의 값이 담길 수 있고, 각 값이 같은 지를 비교할 때 사용


========================================================================================

 ▶ 반복문
   대입 연산자(복합 대입 연산자, 누적 연산자)
   
   int money = 10000;
   //money = money - 1000;
   money -= 1000;
   System.out.println(돈);

   int data = 0;
   //data = data + 1;
   //data += 1;
   data++;
   System.out.println(data);

   증감 연산자
      전위형 : 해당 라인부터 바로 적용
         ++data, --data

      후위형 : 다음 라인부터 적용
         data++, data--

      
   ▷ for문
      int i = 0; i < 10; i = i + 1
      for(초기식; 조건식; 증감식){
         실행할 문장;
      }

   1. 초기식
   ------------
   2. 조건식
   3. 실행할 문장
   4. 증감식
   5. 조건식
   6. 실행할 문장
   7. 증감식
   ...

   ▷ while문
      while(조건식){
         실행할 문장;
      }

   for문과 while문의 목적
      - for: 몇 번 반복할 지 알 때
      - while: 몇 번 반복할 지 모를 때

   ▷ do~while문
      do {
         실행할 문장;
      } while(조건식);


